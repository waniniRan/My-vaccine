# Generated by Django 5.2.3 on 2025-07-04 13:02

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='HealthFacility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefix', models.CharField(editable=False, max_length=1, unique=True)),
                ('ID', models.CharField(editable=False, max_length=15, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('facility_type', models.CharField(choices=[('HOSPITAL', 'Hospital'), ('CLINIC', 'Clinic'), ('HEALTH_CENTER', 'Health Center')], max_length=50)),
                ('location', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('SYSTEM_ADMIN', 'System Administrator'), ('FACILITY_ADMIN', 'Facility Administrator'), ('HEALTHCARE WORKER', 'Worker'), ('GUARDIAN', 'Guardian')], default='GUARDIAN', max_length=20)),
                ('must_change_password', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='sysadmin_user_set', related_query_name='sysadmin_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='sysadmin_user_set', related_query_name='sysadmin_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Vaccine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('v_ID', models.CharField(max_length=10)),
                ('description', models.TextField(blank=True)),
                ('dosage', models.CharField(max_length=50)),
                ('diseasePrevented', models.CharField(max_length=100)),
                ('recommended_age', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('facility', models.ManyToManyField(related_name='vaccines', to='Sysadmin.healthfacility')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_vaccines', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='healthfacility',
            name='admin',
            field=models.OneToOneField(limit_choices_to={'role': 'FACILITY_ADMIN'}, on_delete=django.db.models.deletion.PROTECT, related_name='managed_facility', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='healthfacility',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_facilities', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='FacilityAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_id', models.CharField(editable=False, max_length=15, unique=True)),
                ('fullname', models.CharField(max_length=120)),
                ('email', models.EmailField(max_length=254)),
                ('admin_username', models.CharField(max_length=150, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('temporary_password', models.CharField(max_length=128)),
                ('password_changed', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ID', models.ForeignKey(limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.CASCADE, related_name='facility_admins', to='Sysadmin.healthfacility')),
                ('facility', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Sysadmin.healthfacility')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='facility_admin', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Systemadmin_FacilityAdmin',
            },
        ),
    ]
